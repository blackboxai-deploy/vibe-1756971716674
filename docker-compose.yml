# =============================================================================
# PAPI Hair Design App - Docker Compose Configuration
# =============================================================================
# Production-ready Docker Compose setup with nginx reverse proxy
# =============================================================================

version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: papi-hair-design-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
    expose:
      - "3000"
    networks:
      - papi-network
    volumes:
      - app-data:/app/data
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    labels:
      - "com.papi.service=app"
      - "com.papi.version=1.0.0"

  # Redis Cache (optional, for sessions and caching)
  redis:
    image: redis:7-alpine
    container_name: papi-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-papihairdesign2024}
    volumes:
      - redis-data:/data
    networks:
      - papi-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5
    labels:
      - "com.papi.service=redis"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: papi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/sites-available:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/html:/var/www/html:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - papi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.papi.service=nginx"

  # Watchtower for automatic updates (optional)
  watchtower:
    image: containrrr/watchtower
    container_name: papi-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_LABEL_ENABLE=true
    command: --label-enable --interval 3600
    labels:
      - "com.papi.service=watchtower"

volumes:
  app-data:
    driver: local
    labels:
      - "com.papi.volume=app-data"
  
  redis-data:
    driver: local
    labels:
      - "com.papi.volume=redis-data"
  
  nginx-logs:
    driver: local
    labels:
      - "com.papi.volume=nginx-logs"

networks:
  papi-network:
    driver: bridge
    labels:
      - "com.papi.network=main"